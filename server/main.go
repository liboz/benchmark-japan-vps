package main

import (
	"context"
	"fmt"
	"log"
	"net/http"

	"github.com/bufbuild/connect-go"

	benchmarkv1 "liboz/benchmark-japan-vps/gen/service/v1"        // generated by protoc-gen-go
	"liboz/benchmark-japan-vps/gen/service/v1/benchmarkv1connect" // generated by protoc-gen-connect-go
)

var PORT = 8000

type BenchmarkServer struct{}

func (s *BenchmarkServer) GetResult(
	ctx context.Context,
	req *connect.Request[benchmarkv1.GetResultRequest],
) (*connect.Response[benchmarkv1.GetResultResponse], error) {
	return connect.NewResponse(&benchmarkv1.GetResultResponse{}), nil
}

func main() {
	benchmarkServer := &BenchmarkServer{}
	mux := http.NewServeMux()
	path, handler := benchmarkv1connect.NewBenchmarkServiceHandler(benchmarkServer)
	mux.Handle(path, handler)

	log.Printf("Starting server on port %d\n", PORT)
	log.Fatal(http.ListenAndServe(":"+fmt.Sprintf("%d", PORT), mux))
}
